version: '3.8'

services:
  master:
    build: .
    image: com.github.lazaroofarrill/dispatch_controller
    volumes:
      - app_node_modules:/opt/app/node_modules
      - yarn_cache:/yarn

  cmd_migrations:
    image: com.github.lazaroofarrill/dispatch_controller
    env_file:
      - .env
      - .env.docker
    depends_on:
      - master
      - db
    command: [ 'yarn', 'typeorm', 'migration:run' ]

  api:
    image: com.github.lazaroofarrill/dispatch_controller
    depends_on:
      cmd_migrations:
        condition: service_completed_successfully
      master:
        condition: service_started
      db:
        condition: service_started
      minio:
        condition: service_started
    env_file:
      - .env
      - .env.docker
    ports:
      - ${PORT}:3000
    command: "yarn start"

  job_battery_check:
    image: com.github.lazaroofarrill/dispatch_controller
    depends_on:
      cmd_migrations:
        condition: service_completed_successfully
      master:
        condition: service_started
      db:
        condition: service_started
      minio:
        condition: service_started
    restart: always
    command: "yarn job:drone-battery-check"
    env_file:
      - .env
      - .env.docker
    links:
      - fluentd
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: battery_check

  db:
    image: postgres:14.1-alpine
    restart: no
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${APP_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - db_storage:/var/lib/postgresql/data

  db-test:
    image: postgres:14.1-alpine
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${TEST_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '${TEST_POSTGRES_PORT}:5432'

  minio:
    image: minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_storage:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data
    env_file:
      - .env
    networks:
      default:
        aliases:
          - ${MINIO_HOST}

  fluentd:
    build: docker/fluentd
    volumes:
      - ./docker/fluentd/conf:/fluentd/etc
      - ./logs:/tmp/log/fluent
    ports:
      - "24224:24224"
      - "24224:24224/udp"

volumes:
  db_storage:
    driver: local
  minio_storage:
    driver: local
  mongo_logs:
  app_node_modules:
  yarn_cache:

